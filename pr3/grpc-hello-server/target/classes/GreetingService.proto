syntax = "proto3";
package pdytr.example.grpc;

// Request payload
message HelloRequest {
  // Each message attribute is strongly typed.
  // You also must assign a "tag" number.
  // Each tag number is unique within the message.
  // define name
  string name = 1;

  // This defines a strongly typed list of String
  // lo convierte en array
  repeated string hobbies = 2;

  // There are many more basics types, like Enum, Map
  // See https://developers.google.com/protocol-buffers/docs/proto3
  // for more information.
}

message User {
  string username = 1;
  string password = 2;
}

message Response{
  string mensaje = 1 ;
}


message HelloResponse {
  string greeting = 1;
}

/*
 Defining a Service, a Service can have multiple RPC operations
service GreetingService {
   Define a RPC operation
   rpc greeting(HelloRequest) returns (stream HelloResponse);
    usa un rpc q es que le llega un request y responde con un response
   rpc greeting(HelloRequest) returns (HelloResponse);
}
*/

service GreetingService {
   rpc greeting(User) returns (Response);
}
